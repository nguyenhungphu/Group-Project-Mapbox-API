{"id":"node_modules/haversine/haversine.js","dependencies":[{"name":"C:\\Users\\nguye\\OneDrive - mitt.ca\\VS code\\front end 2020\\Week 14\\wed\\map\\package.json","includedInParent":true,"mtime":1609960571443},{"name":"C:\\Users\\nguye\\OneDrive - mitt.ca\\VS code\\front end 2020\\Week 14\\wed\\map\\node_modules\\haversine\\package.json","includedInParent":true,"mtime":1609960571427}],"generated":{"js":"var haversine = (function () {\n  var RADII = {\n    km:    6371,\n    mile:  3960,\n    meter: 6371000,\n    nmi:   3440\n  }\n\n  // convert to radians\n  var toRad = function (num) {\n    return num * Math.PI / 180\n  }\n\n  // convert coordinates to standard format based on the passed format option\n  var convertCoordinates = function (format, coordinates) {\n    switch (format) {\n    case '[lat,lon]':\n      return { latitude: coordinates[0], longitude: coordinates[1] }\n    case '[lon,lat]':\n      return { latitude: coordinates[1], longitude: coordinates[0] }\n    case '{lon,lat}':\n      return { latitude: coordinates.lat, longitude: coordinates.lon }\n    case '{lat,lng}':\n      return { latitude: coordinates.lat, longitude: coordinates.lng }\n    case 'geojson':\n      return { latitude: coordinates.geometry.coordinates[1], longitude: coordinates.geometry.coordinates[0] }\n    default:\n      return coordinates\n    }\n  }\n\n  return function haversine (startCoordinates, endCoordinates, options) {\n    options   = options || {}\n\n    var R = options.unit in RADII\n      ? RADII[options.unit]\n      : RADII.km\n\n    var start = convertCoordinates(options.format, startCoordinates)\n    var end = convertCoordinates(options.format, endCoordinates)\n\n    var dLat = toRad(end.latitude - start.latitude)\n    var dLon = toRad(end.longitude - start.longitude)\n    var lat1 = toRad(start.latitude)\n    var lat2 = toRad(end.latitude)\n\n    var a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n            Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(lat1) * Math.cos(lat2)\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a))\n\n    if (options.threshold) {\n      return options.threshold > (R * c)\n    }\n\n    return R * c\n  }\n\n})()\n\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = haversine\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/haversine/haversine.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/haversine/haversine.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}}],"sources":{"node_modules/haversine/haversine.js":"var haversine = (function () {\n  var RADII = {\n    km:    6371,\n    mile:  3960,\n    meter: 6371000,\n    nmi:   3440\n  }\n\n  // convert to radians\n  var toRad = function (num) {\n    return num * Math.PI / 180\n  }\n\n  // convert coordinates to standard format based on the passed format option\n  var convertCoordinates = function (format, coordinates) {\n    switch (format) {\n    case '[lat,lon]':\n      return { latitude: coordinates[0], longitude: coordinates[1] }\n    case '[lon,lat]':\n      return { latitude: coordinates[1], longitude: coordinates[0] }\n    case '{lon,lat}':\n      return { latitude: coordinates.lat, longitude: coordinates.lon }\n    case '{lat,lng}':\n      return { latitude: coordinates.lat, longitude: coordinates.lng }\n    case 'geojson':\n      return { latitude: coordinates.geometry.coordinates[1], longitude: coordinates.geometry.coordinates[0] }\n    default:\n      return coordinates\n    }\n  }\n\n  return function haversine (startCoordinates, endCoordinates, options) {\n    options   = options || {}\n\n    var R = options.unit in RADII\n      ? RADII[options.unit]\n      : RADII.km\n\n    var start = convertCoordinates(options.format, startCoordinates)\n    var end = convertCoordinates(options.format, endCoordinates)\n\n    var dLat = toRad(end.latitude - start.latitude)\n    var dLon = toRad(end.longitude - start.longitude)\n    var lat1 = toRad(start.latitude)\n    var lat2 = toRad(end.latitude)\n\n    var a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n            Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(lat1) * Math.cos(lat2)\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a))\n\n    if (options.threshold) {\n      return options.threshold > (R * c)\n    }\n\n    return R * c\n  }\n\n})()\n\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = haversine\n}\n"},"lineCount":63}},"error":null,"hash":"f2838850d6cf4e2d110738b6bd1f145b","cacheData":{"env":{}}}